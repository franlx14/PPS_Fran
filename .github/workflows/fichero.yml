name: Run PHPUnit Tests

on:
  push:
    branches:
      - main

jobs:
  run_phpunit_tests:
    name: Run PHPUnit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages 
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-
          
      - name: Setup PHP with required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
    
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install PHPUnit
        run: composer require --dev phpunit/phpunit

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit tests

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: files.000webhost.com
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /public_html/
          log-level: verbose  # Increase log level to verbose
          protocol: sftp  # Use SFTP instead of FTP
          passive: true  # Set FTP mode to passive
          timeout: 60000  # Increase timeout to 60 seconds

      - name: Retry FTP Deploy
        run: |
          for i in {1..5}; do
            if [ $i -gt 1 ]; then echo "Retrying ($i/5)..."; fi
            npx ftp-deploy --server="files.000webhost.com" --username="${{ secrets.FTP_USERNAME }}" --password="${{ secrets.FTP_PASSWORD }}" --local-dir="./" --server-dir="/public_html/" --protocol=sftp --timeout=60000 --passive=true && break
            sleep 10
          done
